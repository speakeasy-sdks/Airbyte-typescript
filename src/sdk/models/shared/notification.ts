/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NotificationTypeEnum } from "./notificationtypeenum";
import { SlackNotificationConfiguration } from "./slacknotificationconfiguration";
import { Expose, Type } from "class-transformer";

export class Notification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "customerioConfiguration" })
  customerioConfiguration?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "notificationType" })
  notificationType: NotificationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "sendOnFailure" })
  sendOnFailure: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sendOnSuccess" })
  sendOnSuccess: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "slackConfiguration" })
  @Type(() => SlackNotificationConfiguration)
  slackConfiguration?: SlackNotificationConfiguration;
}
