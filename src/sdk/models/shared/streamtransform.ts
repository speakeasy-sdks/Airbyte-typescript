/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FieldTransform } from "./fieldtransform";
import { StreamDescriptor } from "./streamdescriptor";
import { Expose, Type } from "class-transformer";

export enum StreamTransformTransformTypeEnum {
  AddStream = "add_stream",
  RemoveStream = "remove_stream",
  UpdateStream = "update_stream",
}

export class StreamTransform extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "streamDescriptor" })
  @Type(() => StreamDescriptor)
  streamDescriptor: StreamDescriptor;

  @SpeakeasyMetadata()
  @Expose({ name: "transformType" })
  transformType: StreamTransformTransformTypeEnum;

  /**
   * list of field transformations. order does not matter.
   */
  @SpeakeasyMetadata({ elemType: FieldTransform })
  @Expose({ name: "updateStream" })
  @Type(() => FieldTransform)
  updateStream?: FieldTransform[];
}
