/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OAuthConfigSpecification } from "./oauthconfigspecification";
import { Expose, Type } from "class-transformer";

export enum AdvancedAuthAuthFlowTypeEnum {
  Oauth20 = "oauth2.0",
  Oauth10 = "oauth1.0",
}

export class AdvancedAuth extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authFlowType" })
  authFlowType?: AdvancedAuthAuthFlowTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "oauthConfigSpecification" })
  @Type(() => OAuthConfigSpecification)
  oauthConfigSpecification?: OAuthConfigSpecification;

  /**
   * Json Path to a field in the connectorSpecification that should exist for the advanced auth to be applicable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "predicateKey" })
  predicateKey?: string[];

  /**
   * Value of the predicate_key fields for the advanced auth to be applicable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "predicateValue" })
  predicateValue?: string;
}
