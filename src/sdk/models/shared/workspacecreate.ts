/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Geography } from "./geography";
import { Notification } from "./notification";
import { WebhookConfigWrite } from "./webhookconfigwrite";
import { Expose, Type } from "class-transformer";

export class WorkspaceCreate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "anonymousDataCollection" })
    anonymousDataCollection?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "defaultGeography" })
    defaultGeography?: Geography;

    @SpeakeasyMetadata()
    @Expose({ name: "displaySetupWizard" })
    displaySetupWizard?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "news" })
    news?: boolean;

    @SpeakeasyMetadata({ elemType: Notification })
    @Expose({ name: "notifications" })
    @Type(() => Notification)
    notifications?: Notification[];

    @SpeakeasyMetadata()
    @Expose({ name: "securityUpdates" })
    securityUpdates?: boolean;

    @SpeakeasyMetadata({ elemType: WebhookConfigWrite })
    @Expose({ name: "webhookConfigs" })
    @Type(() => WebhookConfigWrite)
    webhookConfigs?: WebhookConfigWrite[];
}
