/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttemptFailureOrigin } from "./attemptfailureorigin";
import { AttemptFailureType } from "./attemptfailuretype";
import { Expose } from "class-transformer";

export class AttemptFailureReason extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "externalMessage" })
  externalMessage?: string;

  /**
   * Indicates where the error originated. If not set, the origin of error is not well known.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failureOrigin" })
  failureOrigin?: AttemptFailureOrigin;

  /**
   * Categorizes well known errors into types for programmatic handling. If not set, the type of error is not well known.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failureType" })
  failureType?: AttemptFailureType;

  @SpeakeasyMetadata()
  @Expose({ name: "internalMessage" })
  internalMessage?: string;

  /**
   * True if it is known that retrying may succeed, e.g. for a transient failure. False if it is known that a retry will not succeed, e.g. for a configuration issue. If not set, retryable status is not well known.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retryable" })
  retryable?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "stacktrace" })
  stacktrace?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp: number;
}
