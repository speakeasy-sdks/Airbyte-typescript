/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class SourceOauthConsentRequest extends SpeakeasyBase {
    /**
     * The values required to configure OAuth flows. The schema for this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification` schema.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "oAuthInputConfiguration" })
    oAuthInputConfiguration?: any;

    /**
     * The url to redirect to after getting the user consent
     */
    @SpeakeasyMetadata()
    @Expose({ name: "redirectUrl" })
    redirectUrl: string;

    @SpeakeasyMetadata()
    @Expose({ name: "sourceDefinitionId" })
    sourceDefinitionId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "sourceId" })
    sourceId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "workspaceId" })
    workspaceId: string;
}
